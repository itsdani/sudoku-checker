[0m[[0minfo[0m] [0m[32mSudokuCheckerSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mSudokuChecker[0m[0m
[0m[[0minfo[0m] [0m[32m  when input is not square[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return false[0m[0m
[0m[[0minfo[0m] [0m[32m  when solution is correct[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return true[0m[0m
[0m[[0minfo[0m] [0m[32m  when a solution element is higher than allowed[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return false[0m[0m
[0m[[0minfo[0m] [0m[32m  when a solution element is lower than 1[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return false[0m[0m
[0m[[0minfo[0m] [0m[32m  when an element is duplicated in a row[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return false[0m[0m
[0m[[0minfo[0m] [0m[32m  when an element is duplicated in a column[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return false[0m[0m
[0m[[0minfo[0m] [0m[32m  when an element is duplicated in a subsquare[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return false[0m[0m
[0m[[0minfo[0m] [0m[32m  when called for a correct subsquare[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return true[0m[0m
[0m[[0minfo[0m] [0m[32m  when split into subsquares[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return the first subsquare in a list[0m[0m
[0m[[0minfo[0m] [0m[32m  when split into subsquares[0m[0m
[0m[[0minfo[0m] [0m[32m  - should return the correct number of subsquares[0m[0m
